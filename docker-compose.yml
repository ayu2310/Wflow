version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: wflow_postgres
    environment:
      POSTGRES_DB: wflow_db
      POSTGRES_USER: wflow_user
      POSTGRES_PASSWORD: wflow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wflow_network

  redis:
    image: redis:7-alpine
    container_name: wflow_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wflow_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wflow_backend
    environment:
      - DATABASE_URL=postgresql://wflow_user:wflow_password@postgres:5432/wflow_db
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      - DEBUG=True
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - screenshots:/app/screenshots
    depends_on:
      - postgres
      - redis
    networks:
      - wflow_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wflow_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - wflow_network
    restart: unless-stopped

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wflow_celery_worker
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://wflow_user:wflow_password@postgres:5432/wflow_db
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
    volumes:
      - ./backend:/app
      - screenshots:/app/screenshots
    depends_on:
      - postgres
      - redis
    networks:
      - wflow_network
    restart: unless-stopped

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wflow_celery_beat
    command: celery -A app.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://wflow_user:wflow_password@postgres:5432/wflow_db
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - wflow_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  screenshots:

networks:
  wflow_network:
    driver: bridge